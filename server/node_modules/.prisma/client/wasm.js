
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  handleName: 'handleName',
  password: 'password',
  points: 'points',
  referralCode: 'referralCode',
  referredById: 'referredById',
  hasMadeFirstPurchase: 'hasMadeFirstPurchase',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  targetAmount: 'targetAmount',
  collectedAmount: 'collectedAmount',
  deliveryAddress: 'deliveryAddress',
  deliveryDateTime: 'deliveryDateTime',
  imageUrl: 'imageUrl',
  designDetails: 'designDetails',
  size: 'size',
  flowerTypes: 'flowerTypes',
  status: 'status',
  visibility: 'visibility',
  completionImageUrls: 'completionImageUrls',
  completionComment: 'completionComment',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  plannerId: 'plannerId'
};

exports.Prisma.PledgeScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  comment: 'comment',
  createdAt: 'createdAt',
  projectId: 'projectId',
  userId: 'userId'
};

exports.Prisma.FloristScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  contactName: 'contactName',
  address: 'address',
  phoneNumber: 'phoneNumber',
  website: 'website',
  portfolio: 'portfolio',
  balance: 'balance',
  laruBotApiKey: 'laruBotApiKey',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  shopName: 'shopName',
  platformName: 'platformName',
  status: 'status'
};

exports.Prisma.OfferScalarFieldEnum = {
  id: 'id',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId',
  floristId: 'floristId'
};

exports.Prisma.ChatRoomScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  offerId: 'offerId'
};

exports.Prisma.ChatMessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  senderType: 'senderType',
  isAutoResponse: 'isAutoResponse',
  createdAt: 'createdAt',
  chatRoomId: 'chatRoomId',
  userId: 'userId',
  floristId: 'floristId'
};

exports.Prisma.VenueScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  venueName: 'venueName',
  address: 'address',
  regulations: 'regulations',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  comment: 'comment',
  createdAt: 'createdAt',
  projectId: 'projectId',
  floristId: 'floristId',
  userId: 'userId'
};

exports.Prisma.CommissionScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  createdAt: 'createdAt',
  projectId: 'projectId'
};

exports.Prisma.AnnouncementScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  createdAt: 'createdAt',
  projectId: 'projectId'
};

exports.Prisma.PayoutRequestScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  accountInfo: 'accountInfo',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  floristId: 'floristId'
};

exports.Prisma.ExpenseScalarFieldEnum = {
  id: 'id',
  itemName: 'itemName',
  amount: 'amount',
  createdAt: 'createdAt',
  projectId: 'projectId'
};

exports.Prisma.QuotationScalarFieldEnum = {
  id: 'id',
  totalAmount: 'totalAmount',
  isApproved: 'isApproved',
  createdAt: 'createdAt',
  projectId: 'projectId'
};

exports.Prisma.QuotationItemScalarFieldEnum = {
  id: 'id',
  itemName: 'itemName',
  amount: 'amount',
  quotationId: 'quotationId'
};

exports.Prisma.TaskScalarFieldEnum = {
  id: 'id',
  title: 'title',
  isCompleted: 'isCompleted',
  dueDate: 'dueDate',
  createdAt: 'createdAt',
  projectId: 'projectId'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  cardName: 'cardName',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId',
  userId: 'userId'
};

exports.Prisma.GroupChatMessageScalarFieldEnum = {
  id: 'id',
  templateId: 'templateId',
  content: 'content',
  createdAt: 'createdAt',
  projectId: 'projectId',
  userId: 'userId'
};

exports.Prisma.ActivePollScalarFieldEnum = {
  id: 'id',
  question: 'question',
  options: 'options',
  createdAt: 'createdAt',
  projectId: 'projectId'
};

exports.Prisma.PollVoteScalarFieldEnum = {
  id: 'id',
  optionIndex: 'optionIndex',
  pollId: 'pollId',
  userId: 'userId'
};

exports.Prisma.ProjectReportScalarFieldEnum = {
  id: 'id',
  reason: 'reason',
  details: 'details',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  projectId: 'projectId',
  reporterId: 'reporterId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ProjectStatus = exports.$Enums.ProjectStatus = {
  FUNDRAISING: 'FUNDRAISING',
  SUCCESSFUL: 'SUCCESSFUL',
  COMPLETED: 'COMPLETED',
  CANCELED: 'CANCELED'
};

exports.OfferStatus = exports.$Enums.OfferStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED'
};

exports.FloristStatus = exports.$Enums.FloristStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.MessageSenderType = exports.$Enums.MessageSenderType = {
  USER: 'USER',
  FLORIST: 'FLORIST'
};

exports.ProjectVisibility = exports.$Enums.ProjectVisibility = {
  PUBLIC: 'PUBLIC',
  UNLISTED: 'UNLISTED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Project: 'Project',
  Pledge: 'Pledge',
  Florist: 'Florist',
  Offer: 'Offer',
  ChatRoom: 'ChatRoom',
  ChatMessage: 'ChatMessage',
  Venue: 'Venue',
  Review: 'Review',
  Commission: 'Commission',
  Announcement: 'Announcement',
  PayoutRequest: 'PayoutRequest',
  Expense: 'Expense',
  Quotation: 'Quotation',
  QuotationItem: 'QuotationItem',
  Task: 'Task',
  Message: 'Message',
  GroupChatMessage: 'GroupChatMessage',
  ActivePoll: 'ActivePoll',
  PollVote: 'PollVote',
  ProjectReport: 'ProjectReport'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/saitoutakumi/FLASTAL_Projects/flastal/server/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/saitoutakumi/FLASTAL_Projects/flastal/server/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// --- Enums ---\n\nenum ProjectStatus {\n  FUNDRAISING\n  SUCCESSFUL\n  COMPLETED\n  CANCELED\n}\n\nenum OfferStatus {\n  PENDING\n  ACCEPTED\n  REJECTED\n}\n\nenum FloristStatus {\n  PENDING // 審査待ち\n  APPROVED // 承認済み\n  REJECTED // 拒否\n}\n\nenum MessageSenderType {\n  USER\n  FLORIST\n}\n\nenum ProjectVisibility {\n  PUBLIC\n  UNLISTED\n}\n\n// --- Models ---\n\nmodel User {\n  id                   String   @id @default(cuid())\n  email                String   @unique\n  handleName           String\n  password             String\n  points               Int      @default(0)\n  referralCode         String   @unique @default(cuid())\n  referredById         String?\n  hasMadeFirstPurchase Boolean  @default(false)\n  createdAt            DateTime @default(now())\n  updatedAt            DateTime @updatedAt\n\n  // Relations\n  referrer          User?              @relation(\"Referrals\", fields: [referredById], references: [id])\n  referredUsers     User[]             @relation(\"Referrals\")\n  createdProjects   Project[]          @relation(\"PlannerProjects\")\n  pledges           Pledge[]\n  reviews           Review[]\n  messages          Message[]\n  groupChatMessages GroupChatMessage[]\n  pollVotes         PollVote[]\n  reports           ProjectReport[]    @relation(\"UserReports\")\n  sentChatMessages  ChatMessage[]      @relation(\"UserChatMessages\")\n}\n\nmodel Project {\n  id                  String            @id @default(cuid())\n  title               String\n  description         String            @db.Text\n  targetAmount        Int\n  collectedAmount     Int               @default(0)\n  deliveryAddress     String\n  deliveryDateTime    DateTime\n  imageUrl            String?\n  designDetails       String?           @db.Text\n  size                String?\n  flowerTypes         String?\n  status              ProjectStatus     @default(FUNDRAISING)\n  visibility          ProjectVisibility @default(PUBLIC)\n  completionImageUrls String[]\n  completionComment   String?           @db.Text\n  createdAt           DateTime          @default(now())\n  updatedAt           DateTime          @updatedAt\n\n  // Relations\n  plannerId         String\n  planner           User               @relation(\"PlannerProjects\", fields: [plannerId], references: [id])\n  pledges           Pledge[]\n  offer             Offer?\n  review            Review?\n  announcements     Announcement[]\n  expenses          Expense[]\n  commission        Commission?\n  quotation         Quotation?\n  messages          Message[]\n  tasks             Task[]\n  groupChatMessages GroupChatMessage[]\n  activePoll        ActivePoll?\n  reports           ProjectReport[]\n}\n\nmodel Pledge {\n  id        String   @id @default(cuid())\n  amount    Int\n  comment   String?\n  createdAt DateTime @default(now())\n\n  // Relations\n  projectId String\n  project   Project @relation(fields: [projectId], references: [id])\n  userId    String\n  user      User    @relation(fields: [userId], references: [id])\n}\n\nmodel Florist {\n  id            String        @id @default(cuid())\n  email         String        @unique\n  password      String\n  contactName   String\n  address       String?\n  phoneNumber   String?\n  website       String?\n  portfolio     String?       @db.Text\n  balance       Int           @default(0)\n  laruBotApiKey String?\n  createdAt     DateTime      @default(now())\n  updatedAt     DateTime      @updatedAt\n  shopName      String // 実店舗名（運営確認用）\n  platformName  String        @unique // プラットフォーム上の活動名（公開用）\n  status        FloristStatus @default(PENDING) // 審査ステータス\n\n  // Relations\n  offers           Offer[]\n  reviews          Review[]\n  payoutRequests   PayoutRequest[]\n  sentChatMessages ChatMessage[]   @relation(\"FloristChatMessages\")\n}\n\nmodel Offer {\n  id        String      @id @default(cuid())\n  status    OfferStatus @default(PENDING)\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n\n  // Relations\n  projectId String    @unique\n  project   Project   @relation(fields: [projectId], references: [id])\n  floristId String\n  florist   Florist   @relation(fields: [floristId], references: [id])\n  chatRoom  ChatRoom?\n}\n\nmodel ChatRoom {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n\n  // Relations\n  offerId  String        @unique\n  offer    Offer         @relation(fields: [offerId], references: [id])\n  messages ChatMessage[]\n}\n\nmodel ChatMessage {\n  id             String            @id @default(cuid())\n  content        String            @db.Text\n  senderType     MessageSenderType\n  isAutoResponse Boolean           @default(false)\n  createdAt      DateTime          @default(now())\n\n  // Relations\n  chatRoomId String\n  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])\n  userId     String?\n  user       User?    @relation(\"UserChatMessages\", fields: [userId], references: [id])\n  floristId  String?\n  florist    Florist? @relation(\"FloristChatMessages\", fields: [floristId], references: [id])\n}\n\nmodel Venue {\n  id          String   @id @default(cuid())\n  email       String   @unique\n  password    String\n  venueName   String\n  address     String?\n  regulations String?  @db.Text\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\nmodel Review {\n  id        String   @id @default(cuid())\n  rating    Int\n  comment   String?  @db.Text\n  createdAt DateTime @default(now())\n\n  // Relations\n  projectId String  @unique\n  project   Project @relation(fields: [projectId], references: [id])\n  floristId String\n  florist   Florist @relation(fields: [floristId], references: [id])\n  userId    String\n  user      User    @relation(fields: [userId], references: [id])\n}\n\nmodel Commission {\n  id        String   @id @default(cuid())\n  amount    Int\n  createdAt DateTime @default(now())\n\n  // Relations\n  projectId String  @unique\n  project   Project @relation(fields: [projectId], references: [id])\n}\n\nmodel Announcement {\n  id        String   @id @default(cuid())\n  title     String\n  content   String   @db.Text\n  createdAt DateTime @default(now())\n\n  // Relations\n  projectId String\n  project   Project @relation(fields: [projectId], references: [id])\n}\n\nmodel PayoutRequest {\n  id          String   @id @default(cuid())\n  amount      Int\n  accountInfo String   @db.Text\n  status      String   @default(\"PENDING\")\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  floristId String\n  florist   Florist @relation(fields: [floristId], references: [id])\n}\n\nmodel Expense {\n  id        String   @id @default(cuid())\n  itemName  String\n  amount    Int\n  createdAt DateTime @default(now())\n\n  // Relations\n  projectId String\n  project   Project @relation(fields: [projectId], references: [id])\n}\n\nmodel Quotation {\n  id          String   @id @default(cuid())\n  totalAmount Int\n  isApproved  Boolean  @default(false)\n  createdAt   DateTime @default(now())\n\n  // Relations\n  projectId String          @unique\n  project   Project         @relation(fields: [projectId], references: [id])\n  items     QuotationItem[]\n}\n\nmodel QuotationItem {\n  id       String @id @default(cuid())\n  itemName String\n  amount   Int\n\n  // Relations\n  quotationId String\n  quotation   Quotation @relation(fields: [quotationId], references: [id])\n}\n\nmodel Task {\n  id          String    @id @default(cuid())\n  title       String\n  isCompleted Boolean   @default(false)\n  dueDate     DateTime?\n  createdAt   DateTime  @default(now())\n\n  // Relations\n  projectId String\n  project   Project @relation(fields: [projectId], references: [id])\n}\n\nmodel Message {\n  id        String   @id @default(cuid())\n  content   String   @db.Text\n  cardName  String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  projectId String\n  project   Project @relation(fields: [projectId], references: [id])\n  userId    String\n  user      User    @relation(fields: [userId], references: [id])\n\n  @@unique([projectId, userId])\n}\n\nmodel GroupChatMessage {\n  id         String   @id @default(cuid())\n  templateId String?\n  content    String?\n  createdAt  DateTime @default(now())\n\n  // Relations\n  projectId String\n  project   Project @relation(fields: [projectId], references: [id])\n  userId    String\n  user      User    @relation(fields: [userId], references: [id])\n}\n\nmodel ActivePoll {\n  id        String   @id @default(cuid())\n  question  String\n  options   String[]\n  createdAt DateTime @default(now())\n\n  // Relations\n  projectId String     @unique\n  project   Project    @relation(fields: [projectId], references: [id])\n  votes     PollVote[]\n}\n\nmodel PollVote {\n  id          String @id @default(cuid())\n  optionIndex Int\n\n  // Relations\n  pollId String\n  poll   ActivePoll @relation(fields: [pollId], references: [id])\n  userId String\n  user   User       @relation(fields: [userId], references: [id])\n\n  @@unique([pollId, userId])\n}\n\nmodel ProjectReport {\n  id        String   @id @default(cuid())\n  reason    String\n  details   String?  @db.Text\n  status    String   @default(\"SUBMITTED\")\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relations\n  projectId  String\n  project    Project @relation(fields: [projectId], references: [id])\n  reporterId String\n  reporter   User    @relation(\"UserReports\", fields: [reporterId], references: [id])\n\n  @@unique([projectId, reporterId])\n}\n",
  "inlineSchemaHash": "9d091c8ff1f03b73e61e0a4b4f55cde1cf20050b5c9bc8dedda55176297168fa",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"handleName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"points\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referralCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"referredById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hasMadeFirstPurchase\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"referrer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Referrals\"},{\"name\":\"referredUsers\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Referrals\"},{\"name\":\"createdProjects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"PlannerProjects\"},{\"name\":\"pledges\",\"kind\":\"object\",\"type\":\"Pledge\",\"relationName\":\"PledgeToUser\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToUser\"},{\"name\":\"groupChatMessages\",\"kind\":\"object\",\"type\":\"GroupChatMessage\",\"relationName\":\"GroupChatMessageToUser\"},{\"name\":\"pollVotes\",\"kind\":\"object\",\"type\":\"PollVote\",\"relationName\":\"PollVoteToUser\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"ProjectReport\",\"relationName\":\"UserReports\"},{\"name\":\"sentChatMessages\",\"kind\":\"object\",\"type\":\"ChatMessage\",\"relationName\":\"UserChatMessages\"}],\"dbName\":null},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"collectedAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"deliveryAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryDateTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"designDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"flowerTypes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProjectStatus\"},{\"name\":\"visibility\",\"kind\":\"enum\",\"type\":\"ProjectVisibility\"},{\"name\":\"completionImageUrls\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completionComment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"plannerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PlannerProjects\"},{\"name\":\"pledges\",\"kind\":\"object\",\"type\":\"Pledge\",\"relationName\":\"PledgeToProject\"},{\"name\":\"offer\",\"kind\":\"object\",\"type\":\"Offer\",\"relationName\":\"OfferToProject\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ProjectToReview\"},{\"name\":\"announcements\",\"kind\":\"object\",\"type\":\"Announcement\",\"relationName\":\"AnnouncementToProject\"},{\"name\":\"expenses\",\"kind\":\"object\",\"type\":\"Expense\",\"relationName\":\"ExpenseToProject\"},{\"name\":\"commission\",\"kind\":\"object\",\"type\":\"Commission\",\"relationName\":\"CommissionToProject\"},{\"name\":\"quotation\",\"kind\":\"object\",\"type\":\"Quotation\",\"relationName\":\"ProjectToQuotation\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"MessageToProject\"},{\"name\":\"tasks\",\"kind\":\"object\",\"type\":\"Task\",\"relationName\":\"ProjectToTask\"},{\"name\":\"groupChatMessages\",\"kind\":\"object\",\"type\":\"GroupChatMessage\",\"relationName\":\"GroupChatMessageToProject\"},{\"name\":\"activePoll\",\"kind\":\"object\",\"type\":\"ActivePoll\",\"relationName\":\"ActivePollToProject\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"ProjectReport\",\"relationName\":\"ProjectToProjectReport\"}],\"dbName\":null},\"Pledge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"PledgeToProject\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PledgeToUser\"}],\"dbName\":null},\"Florist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"portfolio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"laruBotApiKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shopName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platformName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FloristStatus\"},{\"name\":\"offers\",\"kind\":\"object\",\"type\":\"Offer\",\"relationName\":\"FloristToOffer\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"FloristToReview\"},{\"name\":\"payoutRequests\",\"kind\":\"object\",\"type\":\"PayoutRequest\",\"relationName\":\"FloristToPayoutRequest\"},{\"name\":\"sentChatMessages\",\"kind\":\"object\",\"type\":\"ChatMessage\",\"relationName\":\"FloristChatMessages\"}],\"dbName\":null},\"Offer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OfferStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"OfferToProject\"},{\"name\":\"floristId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"florist\",\"kind\":\"object\",\"type\":\"Florist\",\"relationName\":\"FloristToOffer\"},{\"name\":\"chatRoom\",\"kind\":\"object\",\"type\":\"ChatRoom\",\"relationName\":\"ChatRoomToOffer\"}],\"dbName\":null},\"ChatRoom\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"offerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"offer\",\"kind\":\"object\",\"type\":\"Offer\",\"relationName\":\"ChatRoomToOffer\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"ChatMessage\",\"relationName\":\"ChatMessageToChatRoom\"}],\"dbName\":null},\"ChatMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"senderType\",\"kind\":\"enum\",\"type\":\"MessageSenderType\"},{\"name\":\"isAutoResponse\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chatRoomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatRoom\",\"kind\":\"object\",\"type\":\"ChatRoom\",\"relationName\":\"ChatMessageToChatRoom\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserChatMessages\"},{\"name\":\"floristId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"florist\",\"kind\":\"object\",\"type\":\"Florist\",\"relationName\":\"FloristChatMessages\"}],\"dbName\":null},\"Venue\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"venueName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regulations\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToReview\"},{\"name\":\"floristId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"florist\",\"kind\":\"object\",\"type\":\"Florist\",\"relationName\":\"FloristToReview\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"}],\"dbName\":null},\"Commission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"CommissionToProject\"}],\"dbName\":null},\"Announcement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"AnnouncementToProject\"}],\"dbName\":null},\"PayoutRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"accountInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"floristId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"florist\",\"kind\":\"object\",\"type\":\"Florist\",\"relationName\":\"FloristToPayoutRequest\"}],\"dbName\":null},\"Expense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"itemName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ExpenseToProject\"}],\"dbName\":null},\"Quotation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToQuotation\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"QuotationItem\",\"relationName\":\"QuotationToQuotationItem\"}],\"dbName\":null},\"QuotationItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"itemName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quotationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quotation\",\"kind\":\"object\",\"type\":\"Quotation\",\"relationName\":\"QuotationToQuotationItem\"}],\"dbName\":null},\"Task\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToTask\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cardName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"MessageToProject\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MessageToUser\"}],\"dbName\":null},\"GroupChatMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"GroupChatMessageToProject\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GroupChatMessageToUser\"}],\"dbName\":null},\"ActivePoll\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ActivePollToProject\"},{\"name\":\"votes\",\"kind\":\"object\",\"type\":\"PollVote\",\"relationName\":\"ActivePollToPollVote\"}],\"dbName\":null},\"PollVote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"optionIndex\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pollId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poll\",\"kind\":\"object\",\"type\":\"ActivePoll\",\"relationName\":\"ActivePollToPollVote\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PollVoteToUser\"}],\"dbName\":null},\"ProjectReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectReport\"},{\"name\":\"reporterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reporter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserReports\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

